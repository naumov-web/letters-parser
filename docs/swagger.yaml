swagger: "2.0"
info:
  title: Letters parser API
  description: Docs for Letters parser API
  version: 1.0.0
schemes:
  - http
host: 127.0.0.1:31080
basePath: /api

paths:

  /v1/collections:
    get:
      tags:
        - collections
      summary: Get collections
      description: Get list of collections
      produces:
        - application/json
      parameters:
        - in: query
          name: limit
          type: integer
          description: Limit of items in response
        - in: query
          name: offset
          type: integer
          description: Offset of items in response
        - in: query
          name: sortBy
          type: string
          description: Sort by column
          enum:
            - id
            - name
            - createdAt
        - in: query
          name: sortDirection
          type: string
          description: Sort direction
          enum:
            - asc
            - desc
      responses:
        200:
          description: "Successfull operation"
          schema:
            $ref: "#/definitions/GetCollectionsResponseModel"
        422:
          description: "Validation error"
          schema:
            $ref: "#/definitions/ValidationErrorResponseModel"
    post:
      tags:
        - collections
      summary: Create collection
      description: Create collection of letters
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: "CreateCollectionRequestBody"
          in: body
          description: "Request body for creation of collection"
          required: true
          schema:
            $ref: "#/definitions/CreateCollectionRequestModel"
      responses:
        200:
          description: "Successfull operation"
          schema:
            $ref: "#/definitions/DefaultSuccessResponseModel"
        422:
          description: "Validation error"
          schema:
            $ref: "#/definitions/ValidationErrorResponseModel"

  /v1/collections/{collectionId}/items:
    post:
      tags:
        - collection items
      summary: Create collection item
      description: Create item for specific collection
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: collectionId
          required: true
          type: number
        - name: "CreateCollectionItemRequestBody"
          in: body
          description: "Request body for creation of collection item"
          required: true
          schema:
            $ref: "#/definitions/CreateCollectionItemRequestModel"
      responses:
        200:
          description: "Successfull operation"
          schema:
            $ref: "#/definitions/DefaultSuccessResponseModel"
        404:
          description: "Not found error"
          schema:
            $ref: "#/definitions/NotFoundErrorResponseModel"
        422:
          description: "Validation error"
          schema:
            $ref: "#/definitions/ValidationErrorResponseModel"

definitions:

  # Get collections
  GetCollectionsResponseModel:
    type: object
    properties:
      success:
        type: boolean
      items:
        type: array
        items:
          $ref: "#/definitions/CollectionResponseModel"
      count:
        type: integer

  CollectionResponseModel:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string

  # Create collection
  CreateCollectionRequestModel:
    type: object
    required:
      - name
    properties:
      name:
        type: string

  # Create collection item
  CreateCollectionItemRequestModel:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      file:
        $ref: "#/definitions/CreateFileRequestModel"

  # Update file storage settings
  UpdateFileStorageSettingsRequestModel:
    type: object
    required:
      - key
      - secret
      - region
      - bucket
      - url
      - endpoint
    properties:
      key:
        type: string
      secret:
        type: string
      region:
        type: string
      bucket:
        type: string
      url:
        type: string
      endpoint:
        type: string

  # Common
  DefaultSuccessResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string

  ValidationErrorResponseModel:
    type: object
    properties:
      errors:
        type: object

  NotFoundErrorResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string

  CreateFileRequestModel:
    type: object
    properties:
      name:
        type: string
      mime:
        type: string
      content:
        type: string
